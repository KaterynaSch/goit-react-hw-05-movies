{"version":3,"file":"static/js/672.7c689647.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAe,IAAIC,gBAAgB,CACrCC,QAAS,mCACTC,SAAU,UAGDC,EAAmB,mCAAG,sGACVL,EAAAA,EAAAA,IAAA,6BAAgCC,IADtB,uBACxBK,EADwB,EACxBA,KADwB,kBAExBA,GAFwB,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRR,EAAAA,EAAAA,IAAA,wBAA2BC,EAA3B,kBAAiDO,IADzC,uBACtBF,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,sDAKjBG,EAAiB,mCAAG,WAAMC,GAAN,yFACRV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,YAA+BT,IADvB,uBACtBK,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,sDAKjBK,EAAc,mCAAG,WAAMD,GAAN,yFACLV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADlC,uBACnBK,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IAD/B,uBACtBK,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,qD,0KC1BjBO,EAAY,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEjBC,EAAsDD,EAAtDC,MAAOC,EAA+CF,EAA/CE,YAAaC,EAAkCH,EAAlCG,aAAcC,EAAoBJ,EAApBI,SAAUC,EAAUL,EAAVK,OAG5CC,EAAYJ,EAAW,0CAAsCA,GADhD,8EAGbK,GAA4B,GAAfJ,GAAmBK,QAAQ,GACxCC,EAAcJ,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAEzD,OACI,2BAGIX,GACF,gBAAKY,IAAKR,EAAWS,MAAO,IAAKC,IAAG,UAAKf,EAAL,cAEpC,SAAC,MAAD,CAAcgB,KAAM,OAGlB,wBAAKhB,KACL,wCAAgBM,EAAhB,SACA,uCACA,uBAAIH,KACJ,qCACA,uBAAIK,MAGf,E,SC1BKS,GAAaC,E,OAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAeHE,EAAW,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,SAC1B,OACI,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACA,SAAC,MAAD,CAAaL,KAAK,OACjBM,IAGR,ECsBD,EAzCqB,WAAO,IAAD,IACvB,GAA0CC,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAEO9B,GAAW+B,EAAAA,EAAAA,MAAX/B,QACDgC,GAAWC,EAAAA,EAAAA,MAejB,OAbAC,EAAAA,EAAAA,YAAU,WACL,IAAMC,EAAe,mCAAG,8GAEOpC,EAAAA,EAAAA,IAAkBC,GAFzB,OAEXoC,EAFW,OAGjBC,QAAQC,IAAIF,GACZN,EAAiBM,GAJA,gDAMjBG,EAAAA,GAAAA,MAAA,sCANiB,yDAAH,qDAStBJ,GACH,GAAE,CAACnC,IAEC6B,GAKD,iCACI,SAACJ,EAAD,CAAUC,GAAE,oBAAEM,EAASQ,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAtC,sBACA,SAACtC,EAAD,CAAWC,MAASyB,KACnB,2BACG,yBACI,SAAC,KAAD,CAAMH,GAAG,OAAT,qBAEJ,yBACI,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGR,SAAC,EAAAgB,SAAD,CAAUC,SAAU,kBAApB,UACI,SAAC,KAAD,SAhBD,IAoBd,C","sources":["api.jsx","components/MovieCard/MovieCard.jsx","components/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst searchParams = new URLSearchParams({\n    api_key: '1c860efb7ea3ee5f6f74a151b9c6036d',\n    language: 'en-US'    \n})\n\nexport const fetchTrendingMovies = async () => {\n    const {data} = await axios.get(`/trending/all/week?${searchParams}`)\n    return data;\n};\n\nexport const fetchSearchMovies = async(query) => {\n    const {data} = await axios.get(`/search/movie?${searchParams}&query=${query}`)    \n    return data;\n};\n\nexport const fetchMovieDetails = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieCast = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/credits?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieReviews = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?${searchParams}`)\n    return data;\n};\n","import { HiPhotograph } from \"react-icons/hi\";\n\nexport const MovieCard = ({movie}) => {\n    \n   const {title, poster_path, vote_average, overview, genres} = movie;  \n\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n    const posterUrl = poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}`: defaultImg;\n    \n    const userScore = (vote_average * 10).toFixed(0);\n    const movieGenres = genres.map(genre => genre.name).join(', ');\n\n    return(\n        <div>\n           {/* <img src={posterUrl} width = {250}  alt={`${title} poster`}/> */}\n\n           {poster_path ? (\n          <img src={posterUrl} width={250} alt={`${title} poster`} />\n        ) : (\n          <HiPhotograph size={500}/>\n        )}\n\n            <h2>{title}</h2>\n            <p>User Score: {userScore} %</p>\n            <h3>Overview:</h3>\n            <p>{overview}</p>\n            <h3>Genres:</h3>\n            <p>{movieGenres}</p>\n        </div>\n    );\n};","import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({to, children}) => {\n    return (\n        <StyledLink to={to}>\n        <HiArrowLeft size=\"24\"/>\n        {children}\n        </StyledLink>\n    );\n}","import { Link, Outlet, useLocation, useParams} from \"react-router-dom\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { fetchMovieDetails } from \"api\";\nimport toast from 'react-hot-toast';\nimport { MovieCard } from \"components/MovieCard/MovieCard\";\nimport { BackLink } from \"components/BackLink\";\n\nconst MovieDetails = () => {\n    const [selectedMovie, setSelectedMovie] = useState(null);   \n    // const [selectedMovie, setSelectedMovie] = useState({});  \n    const {movieId} = useParams();\n    const location = useLocation();   \n\n    useEffect(() => {\n         const getMovieDetails = async() => {\n            try {\n                const movieData = await fetchMovieDetails(movieId);\n                console.log(movieData);\n                setSelectedMovie(movieData);\n            } catch (error) {\n                toast.error(`Error while fetching movie details`);                \n            }\n        }\n        getMovieDetails();\n    }, [movieId]);\n\n    if (!selectedMovie) {\n        return null; \n    }\n \n    return(\n        <>\n            <BackLink to={location.state?.from ?? '/'}>Go back</BackLink>\n            <MovieCard movie = {selectedMovie}/>\n             <ul>\n                <li>\n                    <Link to=\"cast\">Cast</Link>\n                </li>\n                <li>\n                    <Link to=\"reviews\">Reviews</Link>\n                </li>                \n            </ul>\n            <Suspense fallback={'LOADING PAGE...'}>\n                <Outlet /> \n            </Suspense>\n        </>\n    );\n};\nexport default MovieDetails;"],"names":["axios","searchParams","URLSearchParams","api_key","language","fetchTrendingMovies","data","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","MovieCard","movie","title","poster_path","vote_average","overview","genres","posterUrl","userScore","toFixed","movieGenres","map","genre","name","join","src","width","alt","size","StyledLink","styled","Link","BackLink","to","children","useState","selectedMovie","setSelectedMovie","useParams","location","useLocation","useEffect","getMovieDetails","movieData","console","log","toast","state","from","Suspense","fallback"],"sourceRoot":""}