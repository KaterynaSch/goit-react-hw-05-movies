{"version":3,"file":"static/js/415.8ec33bd1.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAe,IAAIC,gBAAgB,CACrCC,QAAS,mCACTC,SAAU,UAGDC,EAAmB,mCAAG,sGACVL,EAAAA,EAAAA,IAAA,6BAAgCC,IADtB,uBACxBK,EADwB,EACxBA,KADwB,kBAExBA,GAFwB,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRR,EAAAA,EAAAA,IAAA,wBAA2BC,EAA3B,kBAAiDO,IADzC,uBACtBF,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,sDAKjBG,EAAiB,mCAAG,WAAMC,GAAN,yFACRV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,YAA+BT,IADvB,uBACtBK,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,sDAKjBK,EAAc,mCAAG,WAAMD,GAAN,yFACLV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADlC,uBACnBK,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IAD/B,uBACtBK,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,qD,gGCpBjBO,GANYC,EAAAA,GAAAA,GAAH,2GAMGA,EAAAA,GAAAA,GAAH,oG,SCJTC,EAAY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACKF,EAAOG,KAAI,SAAAC,GAAK,aACb,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACG,SAACJ,EAAD,oBAAYO,EAAMK,aAAlB,QAA2BL,EAAMM,mBAF/BN,EAAME,GADF,KAS5B,C,wGCOD,UApBa,WAET,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,gHAEiCxB,EAAAA,EAAAA,MAFjC,gBAEgByB,EAFhB,EAEgBA,QACPF,EAAUE,GAHnB,gDAKQC,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZC,EACH,GAAE,KAGC,SAAC,IAAD,CAAWjB,OAAQA,GAE1B,C","sources":["api.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst searchParams = new URLSearchParams({\n    api_key: '1c860efb7ea3ee5f6f74a151b9c6036d',\n    language: 'en-US'    \n})\n\nexport const fetchTrendingMovies = async () => {\n    const {data} = await axios.get(`/trending/all/week?${searchParams}`)\n    return data;\n};\n\nexport const fetchSearchMovies = async(query) => {\n    const {data} = await axios.get(`/search/movie?${searchParams}&query=${query}`)    \n    return data;\n};\n\nexport const fetchMovieDetails = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieCast = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/credits?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieReviews = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?${searchParams}`)\n    return data;\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`\n\nexport const MovieName = styled.h2`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`","import { Link, useLocation } from \"react-router-dom\"\nimport { MovieName } from \"./MovieList.styled\";\n\n\nexport const MovieList = ({movies}) => {\n    const location = useLocation();\n    return (\n        <ul>\n            {movies.map(movie => (                \n                <li key={movie.id}>\n                    <Link to={`/movies/${movie.id}`} state={{ form: location}}>\n                       <MovieName>{movie.title ?? movie.original_name}</MovieName> \n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n};","import { fetchTrendingMovies } from \"api\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { useEffect, useState } from \"react\";\n\nconst Home = () => {\n\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        async function getTrendingMovies() {\n            try {\n                 const {results} = await fetchTrendingMovies();                                \n                 setMovies(results);\n            } catch (error) {\n                console.log(error);\n            }  \n        };\n        getTrendingMovies()\n    }, []);\n\n    return(\n        <MovieList movies={movies}/>\n    )\n};\nexport default Home;"],"names":["axios","searchParams","URLSearchParams","api_key","language","fetchTrendingMovies","data","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","MovieName","styled","MovieList","movies","location","useLocation","map","movie","to","id","state","form","title","original_name","useState","setMovies","useEffect","results","console","log","getTrendingMovies"],"sourceRoot":""}