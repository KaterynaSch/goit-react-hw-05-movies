{"version":3,"file":"static/js/593.1a8ed0bd.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAe,IAAIC,gBAAgB,CACrCC,QAAS,mCACTC,SAAU,UAGDC,EAAmB,mCAAG,sGACVL,EAAAA,EAAAA,IAAA,6BAAgCC,IADtB,uBACxBK,EADwB,EACxBA,KADwB,kBAExBA,GAFwB,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRR,EAAAA,EAAAA,IAAA,wBAA2BC,EAA3B,kBAAiDO,IADzC,uBACtBF,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,sDAKjBG,EAAiB,mCAAG,WAAMC,GAAN,yFACRV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,YAA+BT,IADvB,uBACtBK,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,sDAKjBK,EAAc,mCAAG,WAAMD,GAAN,yFACLV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADlC,uBACnBK,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IAD/B,uBACtBK,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,qD,gGCpBjBO,GANYC,EAAAA,GAAAA,GAAH,2GAMGA,EAAAA,GAAAA,GAAH,oG,SCJTC,EAAY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACKF,EAAOG,KAAI,SAAAC,GAAK,aACb,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACG,SAACJ,EAAD,oBAAYO,EAAMK,aAAlB,QAA2BL,EAAMM,mBAF/BN,EAAME,GADF,KAS5B,C,2KCfYK,EAAUb,EAAAA,GAAAA,IAAH,4JAOPc,EAAQd,EAAAA,GAAAA,MAAH,+F,SCHLe,EAAa,WACtB,OAA0BC,EAAAA,EAAAA,YAA1B,eAAOtB,EAAP,KAAcuB,EAAd,KACC,GAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,eAgBD,OACI,SAACN,EAAD,WACI,kBAAMO,SAZO,SAACC,GAClBA,EAAIC,iBAKJH,EAA0B,KAAVzB,EAAe,CAAEA,MAAAA,GAAW,CAAC,EAChD,EAKO,WACI,SAACoB,EAAD,CACAS,KAAK,OACLC,aAAa,MACbC,WAAS,EAACC,YAAY,eACtBC,KAAK,QAELC,SAvBc,SAACP,GACvBJ,EAASI,EAAIQ,OAAOC,MACvB,KAuBW,mBAAQP,KAAK,SAAb,wBAIf,ECKD,EApCgB,WACZ,OAAwCP,EAAAA,EAAAA,UAAS,IAAjD,eAAOe,EAAP,KAAqBC,EAArB,KACA,GAAyBd,EAAAA,EAAAA,MAAlB/B,GAAP,eA2BA,OAxBA8C,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACNvC,EAAK,UAAGP,EAAa+C,IAAI,gBAApB,QAAgC,GAD/B,wCAGZ,yFACkB,KAAVxC,EADR,2EAKiCD,EAAAA,EAAAA,IAAkBC,GALnD,gBAOgC,KAFhByC,EALhB,EAKgBA,SAEKC,OACTC,EAAAA,GAAAA,MAAA,2EAEJL,EAAgBG,GAVxB,kDAaQE,EAAAA,GAAAA,MAAY,iDAbpB,2DAHY,0DAmBZC,EACH,GAAE,CAACnD,KAKA,iCACI,SAAC4B,EAAD,KACA,SAACd,EAAA,EAAD,CAAWC,OAAQ6B,MAG9B,C","sources":["api.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst searchParams = new URLSearchParams({\n    api_key: '1c860efb7ea3ee5f6f74a151b9c6036d',\n    language: 'en-US'    \n})\n\nexport const fetchTrendingMovies = async () => {\n    const {data} = await axios.get(`/trending/all/week?${searchParams}`)\n    return data;\n};\n\nexport const fetchSearchMovies = async(query) => {\n    const {data} = await axios.get(`/search/movie?${searchParams}&query=${query}`)    \n    return data;\n};\n\nexport const fetchMovieDetails = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieCast = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/credits?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieReviews = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?${searchParams}`)\n    return data;\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`\n\nexport const MovieName = styled.h2`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`","import { Link, useLocation } from \"react-router-dom\"\nimport { MovieName } from \"./MovieList.styled\";\n\n\nexport const MovieList = ({movies}) => {\n    const location = useLocation();\n    return (\n        <ul>\n            {movies.map(movie => (                \n                <li key={movie.id}>\n                    <Link to={`/movies/${movie.id}`} state={{ form: location}}>\n                       <MovieName>{movie.title ?? movie.original_name}</MovieName> \n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n};","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  /* position: relative; */\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`","// import { useState } from \"react\";\nimport { useState } from \"react\";\n// import {toast} from \"react-hot-toast\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Input, Wrapper } from \"./SearchForm.styled\";\n\nexport const SearchForm = () => {\n    const [query, setQuery] = useState ();\n     const [, setSearchParams] = useSearchParams();\n\n    const handleChangeInput = (evt) => {\n        setQuery(evt.target.value);    \n    };\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n    //     if (inputValue === '') {   \n    //         toast('Please fill in the search value.', { icon: 'ðŸ‘ˆ' });       \n    //     }\n    //     onSubmit(inputValue);  \n        setSearchParams(query !== '' ? { query }  : {});\n    };\n\n      \n    return (\n        <Wrapper>\n            <form onSubmit={handleSubmit}>            \n                <Input \n                type=\"text\" \n                autoComplete=\"off\" \n                autoFocus placeholder=\"Search movie\" \n                name=\"query\" \n                // value={inputValue}\n                onChange={handleChangeInput}\n                />\n                <button type=\"submit\" >Search</button>\n            </form>\n        </Wrapper>        \n    );\n};","import { fetchSearchMovies } from \"api\";\nimport toast from 'react-hot-toast';\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\n\n const Movies = () =>  {\n    const [searchMovies, setSearchMovies] = useState([]);   \n    const [searchParams, ] = useSearchParams();\n    \n   \n    useEffect(() => {     \n        const query = searchParams.get('query') ?? '';\n        // console.log(query);   \n        async function getSearchMovies() {\n            if (query === \"\"){\n                return;\n            }  \n            try {\n                 const {results} = await fetchSearchMovies(query);  \n               \n                 if (results.length === 0){\n                    toast.error(`Sorry, there are no films matching your search query. Please try again.`);\n                 } else{\n                setSearchMovies(results);                            \n                 } \n            } catch (error) {\n                toast.error('Error while fetching films. Please try again.');\n            }  \n        };\n        getSearchMovies()\n    }, [searchParams]);\n\n  \n\n    return (\n        <>\n            <SearchForm />\n            <MovieList movies={searchMovies}/>\n        </>\n    );\n};\nexport default Movies;"],"names":["axios","searchParams","URLSearchParams","api_key","language","fetchTrendingMovies","data","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","MovieName","styled","MovieList","movies","location","useLocation","map","movie","to","id","state","form","title","original_name","Wrapper","Input","SearchForm","useState","setQuery","useSearchParams","setSearchParams","onSubmit","evt","preventDefault","type","autoComplete","autoFocus","placeholder","name","onChange","target","value","searchMovies","setSearchMovies","useEffect","get","results","length","toast","getSearchMovies"],"sourceRoot":""}