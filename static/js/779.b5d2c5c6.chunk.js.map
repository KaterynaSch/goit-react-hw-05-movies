{"version":3,"file":"static/js/779.b5d2c5c6.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAe,IAAIC,gBAAgB,CACrCC,QAAS,mCACTC,SAAU,UAGDC,EAAmB,mCAAG,sGACVL,EAAAA,EAAAA,IAAA,6BAAgCC,IADtB,uBACxBK,EADwB,EACxBA,KADwB,kBAExBA,GAFwB,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRR,EAAAA,EAAAA,IAAA,wBAA2BC,EAA3B,kBAAiDO,IADzC,uBACtBF,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,sDAKjBG,EAAiB,mCAAG,WAAMC,GAAN,yFACRV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,YAA+BT,IADvB,uBACtBK,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,sDAKjBK,EAAc,mCAAG,WAAMD,GAAN,yFACLV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADlC,uBACnBK,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IAD/B,uBACtBK,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,qD,+ICzBjBO,EAAWC,EAAAA,GAAAA,GAAH,mIAORC,GAAcD,EAAAA,EAAAA,IAAOE,EAAAA,IAAPF,CAAH,wHAOXG,EAAcH,EAAAA,GAAAA,GAAH,kD,qICfXI,EAAWJ,EAAAA,GAAAA,GAAH,iEAIRK,EAAiBL,EAAAA,GAAAA,IAAH,sQAYdM,EAAcN,EAAAA,GAAAA,IAAH,2G,+LChBXO,E,QAAcP,GAAAA,GAAH,oH,6BCMXQ,EAAU,WACnB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACOf,GAAWgB,EAAAA,EAAAA,MAAXhB,QAcP,OAZAiB,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,gHAEQhB,EAAAA,EAAAA,IAAkBF,GAF1B,gBAETmB,EAFS,EAETA,QACPJ,EAAgBI,GAHA,gDAKhBC,EAAAA,GAAAA,MAAA,sCALgB,yDAAH,qDAQrBF,GACH,GAAE,CAAClB,KAGC,iCACA,SAAC,KAAD,UAAa,aACY,IAAxBc,EAAaO,SACX,yBAAK,0CAET,SAACV,EAAD,UACKG,EAAaQ,KAAI,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,GAAnB,OACd,2BACI,UAAC,KAAD,WAAU,WAASF,MACnB,uBAAIC,MAFCC,EADK,QAS7B,EACD,G","sources":["API/api.jsx","components/Cast/Cast.styled.js","components/MovieCard/MovieCard.styled.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst searchParams = new URLSearchParams({\n    api_key: '1c860efb7ea3ee5f6f74a151b9c6036d',\n    language: 'en-US'    \n})\n\nexport const fetchTrendingMovies = async () => {\n    const {data} = await axios.get(`/trending/all/week?${searchParams}`)\n    return data;\n};\n\nexport const fetchSearchMovies = async(query) => {\n    const {data} = await axios.get(`/search/movie?${searchParams}&query=${query}`)    \n    return data;\n};\n\nexport const fetchMovieDetails = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieCast = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/credits?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieReviews = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?${searchParams}`)\n    return data;\n};\n","import { HiPhotograph } from \"react-icons/hi\";\nimport styled from \"styled-components\";\n\nexport const CastList = styled.ul`\n    margin-top: 30px;\n    display: flex;\n    align-items: center;\n    gap: 40px;\n    flex-wrap: wrap;\n`\nexport const DefaultIcon = styled(HiPhotograph)`\n    width: 250px;\n    height: 375px;\n    fill: #fff;\n    background-color: lightblue;\n    \n`\nexport const SecondTitle = styled.h2`\n    color: #CB852B;\n    \n`","import styled from \"styled-components\";\n\nexport const Subtitle = styled.h3`\n    font-size: 400;\n    color: #4848a4\n`\nexport const DetailsWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 8px;\n\n    @media only screen and (min-width: 768px) {     \n        flex-direction: row;\n        align-items: start;\n        gap: 10px;      \n    }\n`\nexport const InfoWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    padding: 24px;\n`","import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\n\n    display: flex;    \n    align-items: center;\n    gap: 40px;\n    flex-wrap: wrap;\n\n`","import { fetchMovieReviews } from \"API/api\";\nimport { useEffect, useState } from \"react\";\nimport toast from 'react-hot-toast';\nimport { useParams } from \"react-router-dom\";\nimport { ReviewsList } from \"./Reviews.styled\";\nimport { Subtitle } from \"components/MovieCard/MovieCard.styled\";\nimport { SecondTitle } from \"components/Cast/Cast.styled\";\n\nexport const Reviews = () => {\n    const [movieReviews, setMovieReviews] = useState([])\n    const {movieId} = useParams ();\n\n    useEffect(() => {\n        const getMovieReviews = async() => {\n            try {\n                const {results} = await fetchMovieReviews(movieId);\n                setMovieReviews(results);\n            } catch (error) {\n                toast.error(`Error while fetching movie revievs`);  \n            }\n        };\n        getMovieReviews();\n    }, [movieId]);\n\n    return (\n         <>\n         <SecondTitle>Reviews </SecondTitle>\n         {movieReviews.length === 0 &&\n            <div>There are no reviews for this movie.</div>}\n            \n        <ReviewsList> \n            {movieReviews.map(({author, content, id}) => (                \n                <li key={id}>\n                    <Subtitle>Author: {author}</Subtitle>\n                    <p>{content}</p>\n                </li>\n            ))}\n        </ReviewsList>\n         </>               \n    )\n};\nexport default Reviews;"],"names":["axios","searchParams","URLSearchParams","api_key","language","fetchTrendingMovies","data","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","CastList","styled","DefaultIcon","HiPhotograph","SecondTitle","Subtitle","DetailsWrapper","InfoWrapper","ReviewsList","Reviews","useState","movieReviews","setMovieReviews","useParams","useEffect","getMovieReviews","results","toast","length","map","author","content","id"],"sourceRoot":""}