{"version":3,"file":"static/js/593.ba71c212.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAe,IAAIC,gBAAgB,CACrCC,QAAS,mCACTC,SAAU,UAGDC,EAAmB,mCAAG,sGACVL,EAAAA,EAAAA,IAAA,4BAA+BC,IADrB,uBACxBK,EADwB,EACxBA,KADwB,kBAExBA,GAFwB,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRR,EAAAA,EAAAA,IAAA,wBAA2BC,EAA3B,kBAAiDO,IADzC,uBACtBF,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,sDAKjBG,EAAiB,mCAAG,WAAMC,GAAN,yFACRV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,YAA+BT,IADvB,uBACtBK,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,sDAKjBK,EAAc,mCAAG,WAAMD,GAAN,yFACLV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADlC,uBACnBK,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IAD/B,uBACtBK,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,qD,sEC1BjBO,E,QAAeC,GAAAA,IAAH,uG,SCAjBC,EAAkBC,EAAQ,MAA1BD,cACKE,EAAS,WAClB,OACI,SAACJ,EAAD,WACI,SAACE,EAAD,CACAG,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,QAIjB,C,sGCZYC,EAAWR,EAAAA,GAAAA,GAAH,uCAGRS,EAAYT,EAAAA,GAAAA,EAAH,iJ,SCFTU,EAAY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACKF,EAAOG,KAAI,SAAAC,GAAK,aACb,SAACP,EAAD,WACI,SAAC,KAAD,CAAMQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACG,SAACH,EAAD,oBAAYM,EAAMK,aAAlB,QAA2BL,EAAMM,mBAFzBN,EAAME,GADR,KAS5B,C,yGCdYK,EAAOtB,EAAAA,GAAAA,IAAH,kDAIJuB,EAAYvB,EAAAA,GAAAA,GAAH,uO,0LCJTwB,EAAOxB,EAAAA,GAAAA,KAAH,2GAOJyB,EAAQzB,EAAAA,GAAAA,MAAH,kIAQL0B,EAAS1B,EAAAA,GAAAA,OAAH,gV,SCdN2B,EAAa,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAcxB,OACI,UAACJ,EAAD,CAAMI,SAbW,SAACC,GAClBA,EAAIC,iBACJ,IAAMC,EAAaF,EAAIG,OAAOC,SAASvC,MAAMwC,MAEzCH,EAGAH,EAASG,GAFTI,EAAAA,GAAAA,MAAY,mCAAoC,CAAEC,KAAM,iBAI5DP,EAAIG,OAAOK,OACd,EAGG,WACI,SAACZ,EAAD,CACAa,KAAK,OACLC,aAAa,MACbC,WAAS,EAACC,YAAY,eACtBC,KAAK,WAEL,SAAChB,EAAD,CAAQY,KAAK,SAAb,SAAuB,aAGlC,E,oBCuBD,EA1CgB,WACZ,OAAwCK,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAyCC,EAAAA,EAAAA,MAAzC,eAAO3D,EAAP,KAAqB4D,EAArB,KAEA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACNxD,EAAK,UAAGP,EAAagE,IAAI,gBAApB,QAAgC,GAD/B,wCAGZ,yFACkB,KAAVzD,EADR,iEAKQuD,GAAW,GALnB,UAMiCxD,EAAAA,EAAAA,IAAkBC,GANnD,gBAOgC,KADhB0D,EANhB,EAMgBA,SACKC,OACTlB,EAAAA,GAAAA,MAAA,2EAEJU,EAAgBO,GAVxB,kDAaQjB,EAAAA,GAAAA,MAAY,iDAbpB,yBAeQc,GAAW,GAfnB,8EAHY,0DAqBZK,EACH,GAAE,CAACnE,IAMJ,OACI,UAAC,IAAD,YACI,SAACwC,EAAD,CAAYC,SANC,SAACG,GAClBgB,EAAgB,CAAErD,MAAOqC,GAC5B,IAKQiB,IAAW,SAAC7C,EAAA,EAAD,KACZ,SAACO,EAAA,EAAD,CAAWC,OAAQiC,MAG9B,C","sources":["API/api.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst searchParams = new URLSearchParams({\n    api_key: '1c860efb7ea3ee5f6f74a151b9c6036d',\n    language: 'en-US'    \n})\n\nexport const fetchTrendingMovies = async () => {\n    const {data} = await axios.get(`/trending/all/day?${searchParams}`)\n    return data;\n};\n\nexport const fetchSearchMovies = async(query) => {\n    const {data} = await axios.get(`/search/movie?${searchParams}&query=${query}`)    \n    return data;\n};\n\nexport const fetchMovieDetails = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieCast = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/credits?${searchParams}`)\n    return data;\n};\n\nexport const fetchMovieReviews = async(movieId) => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?${searchParams}`)\n    return data;\n};\n","import styled from \"styled-components\";\n\nexport const ModalWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 24px;\n    \n`","import { ModalWrapper } from \"./Loader.styled\";\n\nconst { RotatingLines } = require(\"react-loader-spinner\");\nexport const Loader = () => {\n    return (\n        <ModalWrapper>\n            <RotatingLines\n            strokeColor=\"#1a1a8d\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"56\"\n            />\n        </ModalWrapper>        \n    );\n};\n","import styled from \"styled-components\";\n\nexport const ListItem = styled.li`\n  padding: 8px;`\n\nexport const MovieName = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  color: navy;\n\n  &:hover,\n  &:focus {\n    text-decoration: underline\n  }\n`","import { Link, useLocation } from \"react-router-dom\"\nimport { ListItem, MovieName } from \"./MovieList.styled\";\n\nexport const MovieList = ({movies}) => {\n    const location = useLocation();\n    return (\n        <ul>\n            {movies.map(movie => (                \n                <ListItem key={movie.id}>\n                    <Link to={`/movies/${movie.id}`} state={{ from: location}}>\n                       <MovieName>{movie.title ?? movie.original_name}</MovieName> \n                    </Link>\n                </ListItem>\n            ))}\n        </ul>\n    );\n};","import styled from \"styled-components\";\n\nexport const Page = styled.div`\n     padding: 18px 24px;\n`\n\nexport const PageTitle = styled.h1`\n    font-weight: 600;\n    margin-bottom: 18px;\n    text-align :center;    \n    color: #CB852B;\n\n    @media only screen and (min-width: 768px) {\n       font-size: 800;\n       text-align: start;\n    }\n`","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;  \n  align-items: center; \n  flex-wrap: nowrap;\n  gap: 10px;  \n`\n\nexport const Input = styled.input`\n  font-size: 16px;\n  width: 150px;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;  \n`\n\nexport const Button = styled.button`\n  font-size: 16px;\n  padding: 8px 18px;\n  color: #0d57aa;\n  background-color: #FFDCCC;\n  border: 1px solid #0d57aa;\n  border-radius: 8px;\n  transition: background-color 250ms ease-in-out, \n    color 250ms ease-in-out; \n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n  }\n`","import { Button, Form, Input } from \"./SearchForm.styled\";\nimport toast from \"react-hot-toast\";\n\nexport const SearchForm = ({onSubmit}) => {\n    \n    const handleSubmit = (evt) => {\n        evt.preventDefault(); \n        const queryValue = evt.target.elements.query.value;\n\n        if(!queryValue){\n            toast.error('Please fill in the search value.', { icon: 'ðŸ‘ˆ' });         \n        } else{\n            onSubmit(queryValue);\n        }        \n        evt.target.reset();\n    };\n      \n    return (\n        <Form onSubmit={handleSubmit}>            \n            <Input \n            type=\"text\" \n            autoComplete=\"off\" \n            autoFocus placeholder=\"Search movie\" \n            name=\"query\"        \n            />\n            <Button type=\"submit\" >Search</Button>\n        </Form>           \n    );\n};","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport toast from 'react-hot-toast';\nimport { fetchSearchMovies } from \"API/api\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Page } from \"./Home/Home.styled\";\n\n const Movies = () =>  {\n    const [searchMovies, setSearchMovies] = useState([]);   \n    const [searchParams, setSearchParams ] = useSearchParams();\n    \n    const [loading, setLoading] = useState(false)\n   \n    useEffect(() => {     \n        const query = searchParams.get('query') ?? '';\n         \n        async function getSearchMovies() {\n            if (query === \"\"){\n                return;\n            }  \n            try {\n                setLoading(true); \n                 const {results} = await fetchSearchMovies(query);                \n                 if (results.length === 0){\n                    toast.error(`Sorry, there are no films matching your search query. Please try again.`);\n                 } else{\n                setSearchMovies(results);                            \n                 } \n            } catch (error) {\n                toast.error('Error while fetching films. Please try again.');\n            } finally {\n                setLoading(false);\n            } \n        };\n        getSearchMovies()\n    }, [searchParams]);\n    \n    const handleSubmit = (queryValue) => {\n        setSearchParams({ query: queryValue });\n    }\n  \n    return (\n        <Page>\n            <SearchForm onSubmit={handleSubmit}/>\n            {loading && <Loader /> }  \n            <MovieList movies={searchMovies}/>\n        </Page>\n    );\n};\nexport default Movies;"],"names":["axios","searchParams","URLSearchParams","api_key","language","fetchTrendingMovies","data","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","ModalWrapper","styled","RotatingLines","require","Loader","strokeColor","strokeWidth","animationDuration","width","ListItem","MovieName","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","original_name","Page","PageTitle","Form","Input","Button","SearchForm","onSubmit","evt","preventDefault","queryValue","target","elements","value","toast","icon","reset","type","autoComplete","autoFocus","placeholder","name","useState","searchMovies","setSearchMovies","useSearchParams","setSearchParams","loading","setLoading","useEffect","get","results","length","getSearchMovies"],"sourceRoot":""}